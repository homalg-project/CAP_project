# SPDX-License-Identifier: GPL-2.0-or-later
# CartesianCategories: Cartesian and cocartesian categories and various subdoctrines
#
# Declarations
#
# THIS FILE IS AUTOMATICALLY GENERATED, SEE CAP_project/CAP/gap/MethodRecord.gi

#! @Chapter Cocartesian Categories

#! @Section Add-methods

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianCoevaluationMorphism`.
#! $F: ( a, b ) \mapsto \mathtt{CocartesianCoevaluationMorphism}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianCoevaluationMorphism",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianCoevaluationMorphism",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianCoevaluationMorphism",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianCoevaluationMorphism",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianCoevaluationMorphismWithGivenSource`.
#! $F: ( a, b, s ) \mapsto \mathtt{CocartesianCoevaluationMorphismWithGivenSource}(a, b, s)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianCoevaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianCoevaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianCoevaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianCoevaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianEvaluationMorphism`.
#! $F: ( a, b ) \mapsto \mathtt{CocartesianEvaluationMorphism}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianEvaluationMorphism",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianEvaluationMorphism",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianEvaluationMorphism",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianEvaluationMorphism",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CocartesianEvaluationMorphismWithGivenRange`.
#! $F: ( a, b, r ) \mapsto \mathtt{CocartesianEvaluationMorphismWithGivenRange}(a, b, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCocartesianEvaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCocartesianEvaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCocartesianEvaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCocartesianEvaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CoexponentialToCoproductAdjunctionMap`.
#! $F: ( a, b, f ) \mapsto \mathtt{CoexponentialToCoproductAdjunctionMap}(a, b, f)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCoexponentialToCoproductAdjunctionMap",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMap",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMap",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMap",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CoexponentialToCoproductAdjunctionMapWithGivenCoproduct`.
#! $F: ( a, b, f, t ) \mapsto \mathtt{CoexponentialToCoproductAdjunctionMapWithGivenCoproduct}(a, b, f, t)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCoexponentialToCoproductAdjunctionMapWithGivenCoproduct",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMapWithGivenCoproduct",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMapWithGivenCoproduct",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCoexponentialToCoproductAdjunctionMapWithGivenCoproduct",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CoproductToCoexponentialAdjunctionMap`.
#! $F: ( c, b, g ) \mapsto \mathtt{CoproductToCoexponentialAdjunctionMap}(c, b, g)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCoproductToCoexponentialAdjunctionMap",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMap",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMap",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMap",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CoproductToCoexponentialAdjunctionMapWithGivenCoexponential`.
#! $F: ( c, b, g, i ) \mapsto \mathtt{CoproductToCoexponentialAdjunctionMapWithGivenCoexponential}(c, b, g, i)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCoproductToCoexponentialAdjunctionMapWithGivenCoexponential",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMapWithGivenCoexponential",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMapWithGivenCoexponential",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCoproductToCoexponentialAdjunctionMapWithGivenCoexponential",
                  [ IsCapCategory, IsList ] );
