# SPDX-License-Identifier: GPL-2.0-or-later
# CartesianCategories: Cartesian and cocartesian categories and various subdoctrines
#
# Declarations
#
# THIS FILE IS AUTOMATICALLY GENERATED, SEE CAP_project/CAP/gap/MethodRecord.gi

#! @Chapter Cartesian Categories

#! @Section Add-methods

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CartesianCoevaluationMorphism`.
#! $F: ( a, b ) \mapsto \mathtt{CartesianCoevaluationMorphism}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCartesianCoevaluationMorphism",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCartesianCoevaluationMorphism",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCartesianCoevaluationMorphism",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCartesianCoevaluationMorphism",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CartesianCoevaluationMorphismWithGivenRange`.
#! $F: ( a, b, r ) \mapsto \mathtt{CartesianCoevaluationMorphismWithGivenRange}(a, b, r)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCartesianCoevaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCartesianCoevaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCartesianCoevaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCartesianCoevaluationMorphismWithGivenRange",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CartesianEvaluationMorphism`.
#! $F: ( a, b ) \mapsto \mathtt{CartesianEvaluationMorphism}(a, b)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCartesianEvaluationMorphism",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCartesianEvaluationMorphism",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCartesianEvaluationMorphism",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCartesianEvaluationMorphism",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `CartesianEvaluationMorphismWithGivenSource`.
#! $F: ( a, b, s ) \mapsto \mathtt{CartesianEvaluationMorphismWithGivenSource}(a, b, s)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddCartesianEvaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddCartesianEvaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddCartesianEvaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddCartesianEvaluationMorphismWithGivenSource",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `DirectProductToExponentialAdjunctionMap`.
#! $F: ( a, b, f ) \mapsto \mathtt{DirectProductToExponentialAdjunctionMap}(a, b, f)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddDirectProductToExponentialAdjunctionMap",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMap",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMap",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMap",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `DirectProductToExponentialAdjunctionMapWithGivenExponential`.
#! $F: ( a, b, f, i ) \mapsto \mathtt{DirectProductToExponentialAdjunctionMapWithGivenExponential}(a, b, f, i)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddDirectProductToExponentialAdjunctionMapWithGivenExponential",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMapWithGivenExponential",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMapWithGivenExponential",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddDirectProductToExponentialAdjunctionMapWithGivenExponential",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `ExponentialToDirectProductAdjunctionMap`.
#! $F: ( b, c, g ) \mapsto \mathtt{ExponentialToDirectProductAdjunctionMap}(b, c, g)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddExponentialToDirectProductAdjunctionMap",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMap",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMap",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMap",
                  [ IsCapCategory, IsList ] );

#! @Description
#! The arguments are a category $C$ and a function $F$.
#! This operation adds the given function $F$
#! to the category for the basic operation `ExponentialToDirectProductAdjunctionMapWithGivenDirectProduct`.
#! $F: ( b, c, g, t ) \mapsto \mathtt{ExponentialToDirectProductAdjunctionMapWithGivenDirectProduct}(b, c, g, t)$.
#! @Returns nothing
#! @Arguments C, F
DeclareOperation( "AddExponentialToDirectProductAdjunctionMapWithGivenDirectProduct",
                  [ IsCapCategory, IsFunction ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMapWithGivenDirectProduct",
                  [ IsCapCategory, IsFunction, IsInt ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMapWithGivenDirectProduct",
                  [ IsCapCategory, IsList, IsInt ] );

DeclareOperation( "AddExponentialToDirectProductAdjunctionMapWithGivenDirectProduct",
                  [ IsCapCategory, IsList ] );
