SetUserPreference( "ShortBanners", true );

# Prefer GAPInfo.UserGapRoot over other package directories to prevent accidentally testing package
# versions distributed with GAP.

FORCE_LOADING_FROM_USER_GAP_ROOT := function ( )
  local name, package_info, pos;
    for name in RecNames( GAPInfo.PackagesInfo ) do
        package_info := GAPInfo.PackagesInfo.(name);
        pos := PositionProperty( package_info, info -> StartsWith( info.InstallationPath, GAPInfo.UserGapRoot ) );
        if pos <> fail then
            SetPackagePath( name, package_info[pos].InstallationPath );
        fi;
    od;
end;

FORCE_LOADING_FROM_USER_GAP_ROOT( );

MakeReadWriteGlobal( "InitializePackagesInfoRecords" );
FORCE_LOADING_FROM_USER_GAP_ROOT_InitializePackagesInfoRecords_orig := InitializePackagesInfoRecords;
InitializePackagesInfoRecords := function ( args... )
  local old_PackagesInfo;
    old_PackagesInfo := GAPInfo.PackagesInfo;
    CallFuncList( FORCE_LOADING_FROM_USER_GAP_ROOT_InitializePackagesInfoRecords_orig, args );
    if not IsIdenticalObj( old_PackagesInfo, GAPInfo.PackagesInfo ) then
        FORCE_LOADING_FROM_USER_GAP_ROOT( );
    fi;
end;
MakeReadOnlyGlobal( "InitializePackagesInfoRecords" );
